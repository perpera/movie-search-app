{"version":3,"file":"static/js/157.060d268a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/ScrollUpBtn/ScrollUp.styled.js","components/ScrollUpBtn/ScrollUpBtn.js","helpers/SmoothScroll.js","helpers/determineReviewColor.js","helpers/makePercentage.js","helpers/notification.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.js","components/PaginationList/PaginationList.js","pages/Movies.js","service/movies-api.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 60px 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n`;\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 350ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n\n  @media screen and (min-width: 428px) {\n    width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const MovieTitle = styled.p`\n  max-width: 300px;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 31px;\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -20px;\n  right: -5px;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 1px solid #fff;\n  background-color: #1cb114;\n  font-weight: 600;\n  color: #fff;\n  font-size: 25px;\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n    font-size: 16px;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: #fff;\n`;\n","import defaultPoster from '../../images/def_poster.png';\nimport { CiCalendar } from 'react-icons/ci';\nimport { Container } from '../../components/App/App.styled';\nimport {\n  List,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from '../MoviesList/MoviesList.styled';\nimport makePercentage from '../../helpers/makePercentage';\nimport { determineReviewColor } from '../../helpers/determineReviewColor';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div name={'movieList'}>\n      <Container>\n        <List>\n          {movies.map(\n            ({\n              id,\n              original_title,\n              poster_path,\n              vote_average,\n              release_date,\n            }) => (\n              <Item key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <Poster\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                        : defaultPoster\n                    }\n                    alt={original_title}\n                  />\n                  <VoteAvr\n                    style={{\n                      backgroundColor: determineReviewColor(\n                        makePercentage(vote_average)\n                      ),\n                    }}\n                  >\n                    {makePercentage(vote_average)}%\n                  </VoteAvr>\n                  <MovieTitle>{original_title}</MovieTitle>\n                  {release_date && (\n                    <MovieRelease>\n                      <CiCalendar />\n                      {release_date}\n                    </MovieRelease>\n                  )}\n                </MovieLink>\n              </Item>\n            )\n          )}\n        </List>\n      </Container>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  background-color: #0dcb2d70;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { ScrollUpButton } from './ScrollUp.styled';\nimport { CiCircleChevUp } from 'react-icons/ci';\n\nexport const ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <CiCircleChevUp size={33} fill=\"#F2EFEE\" />\n    </ScrollUpButton>\n  );\n};\n","import { scroller } from 'react-scroll';\n\nexport const smoothScroll = target => {\n  scroller.scrollTo(target, {\n    duration: 1000,\n    delay: 0,\n    smooth: true,\n    offset: -50,\n  });\n};\n","export const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#8BD538';\n  }\n  return color;\n};\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\n\nexport default makePercentage;\n","import { Notify } from 'notiflix';\n\nexport const notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#8BD538',\n    },\n  });\n  return Notify.info(message);\n};\n","import { styled } from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 60px;\n`;\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n\n  & :is(input:focus, input:valid) ~ label {\n    color: #488026;\n    transform: translateY(-20px);\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 10px;\n  border-radius: 20px;\n  color: #f2efee;\n  border: 2px solid #f2efee;\n  background-color: transparent;\n\n  &:-webkit-autofill {\n    box-shadow: 0 0 0 1000px black inset;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 250px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const SearchInputLabel = styled.label`\n  position: absolute;\n  top: 25%;\n  left: 5%;\n  background-color: black;\n  color: grey;\n  width: 105px;\n  text-align: center;\n  transition: all 200ms linear;\n  cursor: text;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  background-color: #488026;\n  cursor: pointer;\n  transition: opacity 350ms linear;\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { IoSearchOutline } from 'react-icons/io5';\nimport { Container } from '../../components/App/App.styled';\nimport {\n  SearchForm,\n  SearchInputWrapper,\n  SearchInput,\n  SearchInputLabel,\n  SearchBtn,\n} from './SearchMovies.styled';\n\nconst SearchMovies = ({ search }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n\n    search(e.target.search.value);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSearch}>\n        <SearchInputWrapper>\n          <SearchInput\n            id=\"search-input\"\n            type=\"text\"\n            name=\"search\"\n            required\n            autoComplete=\"off\"\n          />\n          <SearchInputLabel htmlFor=\"search-input\">\n            Search movie\n          </SearchInputLabel>\n        </SearchInputWrapper>\n        <SearchBtn type=\"submit\">\n          <IoSearchOutline stroke=\"#fff\" size={25} />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchMovies;\n","import { Pagination } from '@mui/material';\nimport { Container } from '../../components/App/App.styled';\n\nconst PaginationList = ({ pageQty, pg, onChange }) => {\n  const handlePaginationChange = (_, num) => {\n    onChange(num);\n  };\n\n  return (\n    <Container>\n      <Pagination\n        count={pageQty}\n        page={pg}\n        onChange={handlePaginationChange}\n        color={'success'}\n        sx={{\n          color: '#fff',\n          stroke: '#fff',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px',\n\n          '& .MuiPaginationItem-root': {\n            color: '#fff',\n          },\n          '& .MuiPaginationItem-page': {\n            '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n              {\n                color: '#1cb114',\n              },\n          },\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default PaginationList;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader/Loader';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport SearchMovies from '../components/SearchMovies/SearchMovies';\nimport { getMoviesBySearch } from '../service/movies-api';\nimport { notification } from '../helpers/notification';\nimport PaginationList from '../components/PaginationList/PaginationList';\nimport { ScrollUpBtn } from '../components/ScrollUpBtn/ScrollUpBtn';\nimport { smoothScroll } from '../helpers/SmoothScroll';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoader(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await getMoviesBySearch(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n\n        smoothScroll('movieList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <SearchMovies search={handleSearch} />\n\n      {pageQty > 1 && (\n        <PaginationList pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '4441e8220eedb15302cf9a6e811d294b';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = { api_key: KEY };\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesBySearch = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Poster","_templateObject3","MovieLink","Link","_templateObject4","MovieTitle","_templateObject5","VoteAvr","_templateObject6","MovieRelease","_templateObject7","_ref","movies","location","_jsx","name","children","Container","map","_ref2","id","original_title","poster_path","vote_average","release_date","_jsxs","to","concat","state","from","src","defaultPoster","alt","style","backgroundColor","determineReviewColor","makePercentage","CiCalendar","ScrollUpButton","ScrollUpBtn","isVisible","setIsVisible","useState","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollToTop","scrollTo","top","behavior","display","CiCircleChevUp","size","fill","smoothScroll","target","scroller","duration","delay","smooth","offset","percentage","color","num","Math","ceil","Number","notification","message","Notify","backOverlay","info","background","SearchForm","SearchInputWrapper","SearchInput","SearchInputLabel","SearchBtn","search","onSubmit","e","preventDefault","value","currentTarget","reset","type","required","autoComplete","htmlFor","IoSearchOutline","stroke","pageQty","pg","onChange","Pagination","count","page","handlePaginationChange","_","sx","justifyContent","marginTop","Movies","searchParams","setSearchParams","useSearchParams","useLocation","setMovies","loader","setLoader","setPg","setPageQty","queryForSearch","get","async","results","total_pages","getMoviesBySearch","query","length","fetchMoviesBySearch","_Fragment","Loader","SearchMovies","PaginationList","MoviesList","axios","api_key","getTrending","data","getMovieById","getCast","getReviews"],"sourceRoot":""}