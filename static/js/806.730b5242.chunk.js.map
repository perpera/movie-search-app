{"version":3,"file":"static/js/806.730b5242.chunk.js","mappings":"uPAEO,MAAMA,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8BAG3BC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yIAQtBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+FAMtBK,EAAeP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kIASvBO,EAAeT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8C,sBCZtC,MAoDA,EApDgBS,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OAEbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,GAwBrC,OAtBAG,EAAAA,EAAAA,YAAU,KACRD,GAAU,GAEWE,WACnB,IACE,MAAM,QAAEC,SAAkBC,EAAAA,EAAAA,IAAWV,GAErCG,EAAWM,EASb,CANE,OAAO,QAAEE,KACTC,EAAAA,EAAAA,GAAaD,EACf,CAAC,QACCL,GAAU,IAEVO,EAAAA,EAAAA,GAAa,iBACf,GAGFC,EAAc,GACb,CAACd,KAGFe,EAAAA,EAAAA,KAAC5B,EAAc,CAAC6B,KAAK,iBAAgBC,UACnCC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,CACPZ,IAAUU,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IACjBlB,EAAQmB,OAAS,GAChBN,EAAAA,EAAAA,KAACxB,EAAU,CAAA0B,SACRf,EAAQoB,KAAIC,IAAA,IAAC,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EAAA,OACnCL,EAAAA,EAAAA,MAACzB,EAAU,CAAAwB,SAAA,EACTC,EAAAA,EAAAA,MAACvB,EAAY,CAAAsB,SAAA,EACXF,EAAAA,EAAAA,KAACY,EAAAA,IAAU,IACVF,MAEHV,EAAAA,EAAAA,KAAA,KAAAE,SAAIS,MALWF,EAMJ,OAIjBT,EAAAA,EAAAA,KAAClB,EAAY,CAAAoB,SAAC,0BAGH,C,+CC9Dd,MAAMJ,EAAee,IAC1BC,EAAAA,GAAAA,SAAkBD,EAAQ,CACxBE,SAAU,IACVC,MAAO,EACPC,QAAQ,EACRC,QAAS,IACT,C,gDCNG,MAAMrB,EAAeD,IAC1BuB,EAAAA,OAAAA,KAAY,CACVC,aAAa,EACbC,KAAM,CACJC,WAAY,aAGTH,EAAAA,OAAAA,KAAYvB,G,oFCNrB2B,EAAAA,EAAAA,SAAAA,QAAyB,6BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAFd,oCAIL,MAAMC,EAAchC,UACzB,MAAM,KAAEiC,SAAeH,EAAAA,EAAAA,IAAU,0BACjC,OAAOG,EAAKhC,OAAO,EAGRiC,EAAelC,UAC1B,MAAM,KAAEiC,SAAeH,EAAAA,EAAAA,IAAU,YAADK,OAAanB,IAC7C,OAAOiB,CAAI,EAGAG,EAAoBpC,MAAOqC,EAAOC,KAC7C,MAAM,KAAEL,SAAeH,EAAAA,EAAAA,IAAU,yBAADK,OACLE,EAAK,UAAAF,OAASG,IAEzC,OAAOL,CAAI,EAGAM,EAAUvC,UACrB,MAAM,KAAEiC,SAAeH,EAAAA,EAAAA,IAAU,YAADK,OAAanB,EAAE,aAC/C,OAAOiB,CAAI,EAGA/B,EAAaF,UACxB,MAAM,KAAEiC,SAAeH,EAAAA,EAAAA,IAAU,WAADK,OAAYnB,EAAE,aAC9C,OAAOiB,CAAI,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","helpers/SmoothScroll.js","helpers/notification.js","service/movies-api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ReviewsWrapper = styled.div`\n  padding: 50px 0;\n`;\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 25px;\n  color: #fff;\n`;\nexport const ReviewItem = styled.li`\n  border: 1px solid #fff;\n  border-radius: 20px;\n  padding: 10px;\n  width: 100%;\n`;\nexport const ReviewAuthor = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const NoReviewsMsg = styled.div`\n  color: #fff;\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport { IoMdPerson } from 'react-icons/io';\nimport { getReviews } from '../../service/movies-api';\nimport { notification } from '../../helpers/notification';\nimport { Container } from '../../components/App/App.styled';\nimport {\n  ReviewsWrapper,\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  NoReviewsMsg,\n} from '../../components/Reviews/Reviews.styled';\nimport { smoothScroll } from '../../helpers/SmoothScroll';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetchReviews = async () => {\n      try {\n        const { results } = await getReviews(movieId);\n\n        setReviews(results);\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n\n        smoothScroll('reviewsWrapper');\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsWrapper name=\"reviewsWrapper\">\n      <Container>\n        {loader && <Loader />}\n        {reviews.length > 0 ? (\n          <ReviewList>\n            {reviews.map(({ id, author, content }) => (\n              <ReviewItem key={id}>\n                <ReviewAuthor>\n                  <IoMdPerson />\n                  {author}\n                </ReviewAuthor>\n                <p>{content}</p>\n              </ReviewItem>\n            ))}\n          </ReviewList>\n        ) : (\n          <NoReviewsMsg>Sorry, no reviews</NoReviewsMsg>\n        )}\n      </Container>\n    </ReviewsWrapper>\n  );\n};\n\nexport default Reviews;\n","import { scroller } from 'react-scroll';\n\nexport const smoothScroll = target => {\n  scroller.scrollTo(target, {\n    duration: 1000,\n    delay: 0,\n    smooth: true,\n    offset: -50,\n  });\n};\n","import { Notify } from 'notiflix';\n\nexport const notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#8BD538',\n    },\n  });\n  return Notify.info(message);\n};\n","import axios from 'axios';\n\nconst KEY = '4441e8220eedb15302cf9a6e811d294b';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = { api_key: KEY };\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesBySearch = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["ReviewsWrapper","styled","_templateObject","_taggedTemplateLiteral","ReviewList","_templateObject2","ReviewItem","_templateObject3","ReviewAuthor","_templateObject4","NoReviewsMsg","_templateObject5","Reviews","movieId","useParams","reviews","setReviews","useState","loader","setLoader","useEffect","async","results","getReviews","message","notification","smoothScroll","fetchReviews","_jsx","name","children","_jsxs","Container","Loader","length","map","_ref","id","author","content","IoMdPerson","target","scroller","duration","delay","smooth","offset","Notify","backOverlay","info","background","axios","api_key","getTrending","data","getMovieById","concat","getMoviesBySearch","query","page","getCast"],"sourceRoot":""}